> .exit
WARNING: You are currently using Node.js v21.4.0, which is not supported by Hardhat. This can lead to unexpected behavior. See https://hardhat.org/nodejs-versions


(node:48708) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
 ·-----------------------------------------|--------------------------------|--------------------------------·
 |  Solc version: 0.8.18                   ·  Optimizer enabled: true       ·  Runs: 200                     │
 ··········································|································|·································
 |  Contract Name                          ·  Deployed size (KiB) (change)  ·  Initcode size (KiB) (change)  │
 ··········································|································|·································
 |  ABDKMath64x64                          ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  Address                                ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  Address                                ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  AddressQueueStorage                    ·                 5.473 (0.000)  ·                 5.600 (0.000)  │
 ··········································|································|·································
 |  AddressSetStorage                      ·                 3.764 (0.000)  ·                 3.891 (0.000)  │
 ··········································|································|·································
 |  AddressUpgradeable                     ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  AdminTreasury                          ·                 6.060 (0.000)  ·                 6.728 (0.000)  │
 ··········································|································|·································
 |  Clones                                 ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  console                                ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  Constants                              ·                 1.587 (0.000)  ·                 1.644 (0.000)  │
 ··········································|································|·································
 |  Deployer                               ·                 0.062 (0.000)  ·                 0.090 (0.000)  │
 ··········································|································|·································
 |  DepositPool                            ·                 8.874 (0.000)  ·                 9.542 (0.000)  │
 ··········································|································|·································
 |  Directory                              ·                11.056 (0.000)  ·                11.438 (0.000)  │
 ··········································|································|·································
 |  ECDSA                                  ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  ERC1967Proxy                           ·                 0.683 (0.000)  ·                 1.788 (0.000)  │
 ··········································|································|·································
 |  ERC20                                  ·                 2.256 (0.000)  ·                 3.007 (0.000)  │
 ··········································|································|·································
 |  ERC20                                  ·                 2.080 (0.000)  ·                 2.818 (0.000)  │
 ··········································|································|·································
 |  ERC20Upgradeable                       ·                 2.087 (0.000)  ·                 2.118 (0.000)  │
 ··········································|································|·································
 |  Errors                                 ·                 0.062 (0.000)  ·                 0.090 (0.000)  │
 ··········································|································|·································
 |  Math                                   ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  MathUpgradeable                        ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  MerkleProof                            ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  MerkleProof                            ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  MockERC20                              ·                 3.080 (0.000)  ·                 4.189 (0.000)  │
 ··········································|································|·································
 |  MockMinipool                           ·                 1.762 (0.000)  ·                 1.793 (0.000)  │
 ··········································|································|·································
 |  MockPriceFetcher                       ·                 3.317 (0.000)  ·                 3.693 (0.000)  │
 ··········································|································|·································
 |  MockRETHOracle                         ·                 0.168 (0.000)  ·                 0.202 (0.000)  │
 ··········································|································|·································
 |  MockRocketNodeManager                  ·                 0.726 (0.000)  ·                 0.757 (0.000)  │
 ··········································|································|·································
 |  MockRocketNodeStaking                  ·                 0.694 (0.000)  ·                 0.726 (0.000)  │
 ··········································|································|·································
 |  MockRocketStorage                      ·                 0.393 (0.000)  ·                 0.424 (0.000)  │
 ··········································|································|·································
 |  MockSanctions                          ·                 0.259 (0.000)  ·                 0.290 (0.000)  │
 ··········································|································|·································
 |  MockUniswapV3Pool                      ·                 0.251 (0.000)  ·                 0.299 (0.000)  │
 ··········································|································|·································
 |  OperatorDistributor                    ·                13.182 (0.000)  ·                13.850 (0.000)  │
 ··········································|································|·································
 |  PenaltyTest                            ·                 0.893 (0.000)  ·                 1.013 (0.000)  │
 ··········································|································|·································
 |  PriceFetcher                           ·                 4.051 (0.000)  ·                 4.427 (0.000)  │
 ··········································|································|·································
 |  ProtocolMath                           ·                 0.145 (0.000)  ·                 0.199 (0.000)  │
 ··········································|································|·································
 |  ProtocolMathTest                       ·                 3.812 (0.000)  ·                 3.843 (0.000)  │
 ··········································|································|·································
 |  RevertOnTransfer                       ·                 0.062 (0.000)  ·                 0.090 (0.000)  │
 ··········································|································|·································
 |  RocketAuctionManager                   ·                 9.606 (0.000)  ·                 9.733 (0.000)  │
 ··········································|································|·································
 |  RocketClaimDAO                         ·                 5.758 (0.000)  ·                 5.933 (0.000)  │
 ··········································|································|·································
 |  RocketClaimDAOOld                      ·                 1.747 (0.000)  ·                 1.874 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrusted                   ·                14.063 (0.000)  ·                14.189 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedActions            ·                15.712 (0.000)  ·                15.839 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedProposals          ·                13.729 (0.000)  ·                13.856 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedSettingsMembers    ·                 4.065 (0.000)  ·                 6.323 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedSettingsMinipool   ·                 4.693 (0.000)  ·                 7.697 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedSettingsProposals  ·                 3.547 (0.000)  ·                 5.380 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedSettingsRewards    ·                 3.658 (0.000)  ·                 5.496 (0.000)  │
 ··········································|································|·································
 |  RocketDAONodeTrustedUpgrade            ·                 8.198 (0.000)  ·                 8.325 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProposal                      ·                15.165 (0.000)  ·                15.292 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocol                      ·                 9.442 (0.000)  ·                 9.626 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolActions               ·                 0.133 (0.000)  ·                 0.259 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolOld                   ·                 7.081 (0.000)  ·                 7.252 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolProposal              ·                13.939 (0.000)  ·                14.123 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolProposals             ·                 8.564 (0.000)  ·                 8.742 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolProposalsOld          ·                 5.455 (0.000)  ·                 5.626 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsAuction       ·                 3.899 (0.000)  ·                 7.021 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsAuctionOld    ·                 4.826 (0.000)  ·                 7.148 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsDeposit       ·                 3.289 (0.000)  ·                 5.711 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsDepositOld    ·                 4.835 (0.000)  ·                 7.111 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsInflation     ·                 3.617 (0.000)  ·                 6.447 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsInflationOld  ·                 4.987 (0.000)  ·                 7.620 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsMinipool      ·                 4.090 (0.000)  ·                 6.826 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsMinipoolOld   ·                 3.808 (0.000)  ·                 6.195 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsNetwork       ·                 4.729 (0.000)  ·                 8.436 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsNetworkOld    ·                 5.688 (0.000)  ·                 8.634 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsNode          ·                 4.761 (0.000)  ·                 7.017 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsProposals     ·                 5.081 (0.000)  ·                 9.012 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsRewards       ·                 4.130 (0.000)  ·                 5.581 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsRewardsOld    ·                 6.308 (0.000)  ·                 9.497 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolSettingsSecurity      ·                 3.632 (0.000)  ·                 6.269 (0.000)  │
 ··········································|································|·································
 |  RocketDAOProtocolVerifier              ·                14.703 (0.000)  ·                14.887 (0.000)  │
 ··········································|································|·································
 |  RocketDAOSecurity                      ·                 3.036 (0.000)  ·                 3.211 (0.000)  │
 ··········································|································|·································
 |  RocketDAOSecurityActions               ·                 5.402 (0.000)  ·                 5.577 (0.000)  │
 ··········································|································|·································
 |  RocketDAOSecurityProposals             ·                 7.802 (0.000)  ·                 7.977 (0.000)  │
 ··········································|································|·································
 |  RocketDepositPool                      ·                11.981 (0.000)  ·                12.680 (0.000)  │
 ··········································|································|·································
 |  RocketMerkleDistributorMainnet         ·                 5.598 (0.000)  ·                 6.150 (0.000)  │
 ··········································|································|·································
 |  RocketMerkleDistributorMainnetOld      ·                 6.665 (0.000)  ·                 7.266 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolBase                     ·                 5.166 (0.000)  ·                 5.275 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolBondReducer              ·                 8.620 (0.000)  ·                 8.794 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolDelegate                 ·                22.281 (0.000)  ·                22.352 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolFactory                  ·                 1.701 (0.000)  ·                 1.828 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolManager                  ·                17.215 (0.000)  ·                17.398 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolManagerOld               ·                18.969 (0.000)  ·                19.148 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolPenalty                  ·                 1.612 (0.000)  ·                 1.735 (0.000)  │
 ··········································|································|·································
 |  RocketMinipoolQueue                    ·                 8.325 (0.000)  ·                 8.452 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkBalances                  ·                 4.307 (0.000)  ·                 4.481 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkBalancesOld               ·                 4.487 (0.000)  ·                 4.662 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkFees                      ·                 2.666 (0.000)  ·                 2.793 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkPenalties                 ·                 5.103 (0.000)  ·                 5.229 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkPrices                    ·                 4.037 (0.000)  ·                 4.282 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkPricesOld                 ·                 4.894 (0.000)  ·                 5.403 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkSnapshots                 ·                 3.251 (0.000)  ·                 3.426 (0.000)  │
 ··········································|································|·································
 |  RocketNetworkVoting                    ·                 5.673 (0.000)  ·                 5.895 (0.000)  │
 ··········································|································|·································
 |  RocketNodeDeposit                      ·                 9.896 (0.000)  ·                10.080 (0.000)  │
 ··········································|································|·································
 |  RocketNodeDepositLEB4                  ·                10.012 (0.000)  ·                10.195 (0.000)  │
 ··········································|································|·································
 |  RocketNodeDepositOld                   ·                10.092 (0.000)  ·                10.219 (0.000)  │
 ··········································|································|·································
 |  RocketNodeDistributor                  ·                 0.281 (0.000)  ·                 0.497 (0.000)  │
 ··········································|································|·································
 |  RocketNodeDistributorDelegate          ·                 2.280 (0.000)  ·                 2.563 (0.000)  │
 ··········································|································|·································
 |  RocketNodeDistributorFactory           ·                 1.813 (0.000)  ·                 1.940 (0.000)  │
 ··········································|································|·································
 |  RocketNodeManager                      ·                16.276 (0.000)  ·                16.460 (0.000)  │
 ··········································|································|·································
 |  RocketNodeManagerOld                   ·                16.766 (0.000)  ·                16.945 (0.000)  │
 ··········································|································|·································
 |  RocketNodeStaking                      ·                12.812 (0.000)  ·                13.084 (0.000)  │
 ··········································|································|·································
 |  RocketNodeStakingOld                   ·                10.746 (0.000)  ·                10.873 (0.000)  │
 ··········································|································|·································
 |  RocketRewardsPool                      ·                 9.004 (0.000)  ·                 9.182 (0.000)  │
 ··········································|································|·································
 |  RocketRewardsPoolOld                   ·                 9.004 (0.000)  ·                 9.182 (0.000)  │
 ··········································|································|·································
 |  RocketSmoothingPool                    ·                 1.809 (0.000)  ·                 1.979 (0.000)  │
 ··········································|································|·································
 |  RocketStorage                          ·                 8.549 (0.000)  ·                 8.610 (0.000)  │
 ··········································|································|·································
 |  RocketTokenDummyRPL                    ·                 3.498 (0.000)  ·                 4.205 (0.000)  │
 ··········································|································|·································
 |  RocketTokenRETH                        ·                 8.134 (0.000)  ·                 8.563 (0.000)  │
 ··········································|································|·································
 |  RocketTokenRPL                         ·                 7.549 (0.000)  ·                 8.465 (0.000)  │
 ··········································|································|·································
 |  RocketUpgradeOneDotThree               ·                14.247 (0.000)  ·                14.453 (0.000)  │
 ··········································|································|·································
 |  RocketVault                            ·                 7.322 (0.000)  ·                 7.449 (0.000)  │
 ··········································|································|·································
 |  RPLVault                               ·                13.200 (0.000)  ·                13.868 (0.000)  │
 ··········································|································|·································
 |  SafeCast                               ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  SafeCast                               ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  SafeERC20                              ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  SafeERC20                              ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  SafeERC20Upgradeable                   ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  SafeMath                               ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  SafeMath                               ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  SignedMath                             ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  SignedMathUpgradeable                  ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  SignedSafeMath                         ·                 0.084 (0.000)  ·                 0.118 (0.000)  │
 ··········································|································|·································
 |  SnapshotTest                           ·                 1.693 (0.000)  ·                 2.281 (0.000)  │
 ··········································|································|·································
 |  StorageSlot                            ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  StorageSlotUpgradeable                 ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  Strings                                ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  StringsUpgradeable                     ·                 0.084 (0.000)  ·                 0.138 (0.000)  │
 ··········································|································|·································
 |  ValidatorAccount                       ·                 6.927 (0.000)  ·                 7.314 (0.000)  │
 ··········································|································|·································
 |  ValidatorAccountFactory                ·                 7.595 (0.000)  ·                 7.982 (0.000)  │
 ··········································|································|·································
 |  WETH                                   ·                 2.941 (0.000)  ·                 3.440 (0.000)  │
 ··········································|································|·································
 |  WETHVault                              ·                15.305 (0.000)  ·                15.973 (0.000)  │
 ··········································|································|·································
 |  Whitelist                              ·                 8.277 (0.000)  ·                 8.665 (0.000)  │
 ··········································|································|·································
 |  WhitelistV2                            ·                 8.308 (0.000)  ·                 8.695 (0.000)  │
 ··········································|································|·································
 |  YieldDistributor                       ·                12.395 (0.000)  ·                12.782 (0.000)  │
 ·-----------------------------------------|--------------------------------|--------------------------------·
Welcome to Node.js v21.4.0.
Type ".help" for more information.
> (node:48709) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
> const vaf = await ethers.getContractAt("ValidatorAccountFactory", "0x50ea5ba8241a3357275a7b0b61735d1b46F4499F")
undefined
> const [deployer, admin] = await ethers.getSigners()
undefined
> deployer.address
'0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374'
> admin.address
'0x241E263b40c7Bf458b6b28D86338cf26f7Cc5a57'
> const rplToken = ethers.getContractAt("RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
undefined
> Uncaught:
HardhatError: HH701: There are multiple artifacts for contract "RocketTokenRPLInterface", please use a fully qualified name.

Please replace RocketTokenRPLInterface for one of these options wherever you are trying to read its artifact:

contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface
contracts/Testing/Rocketpool/interface/token/RocketTokenRPLInterface.sol:RocketTokenRPLInterface

    at Artifacts._getArtifactPathFromFiles (/constellation/node_modules/hardhat/src/internal/artifacts.ts:872:13)
    at Artifacts._getArtifactPath (/constellation/node_modules/hardhat/src/internal/artifacts.ts:522:21)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Artifacts.readArtifact (/constellation/node_modules/hardhat/src/internal/artifacts.ts:71:26)
    at async getContractAt (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:303:22)
> const rplToken = ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
Uncaught SyntaxError: Identifier 'rplToken' has already been declared
> rplToken = ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
Uncaught TypeError: Assignment to constant variable.
> let rpl = ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
undefined
> await rpl.balanceOf(admin.address)
Uncaught TypeError: rpl.balanceOf is not a function
    at REPL69:1:43
> await rpl
Contract {
  interface: Interface {
    fragments: [
      [EventFragment],    [EventFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'getInflationCalcTime()': [FunctionFragment],
      'getInflationIntervalRate()': [FunctionFragment],
      'getInflationIntervalStartTime()': [FunctionFragment],
      'getInflationIntervalTime()': [FunctionFragment],
      'getInflationIntervalsPassed()': [FunctionFragment],
      'getInflationRewardsContractAddress()': [FunctionFragment],
      'inflationCalculate()': [FunctionFragment],
      'inflationMintTokens()': [FunctionFragment],
      'swapTokens(uint256)': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 222,
      [Symbol(trigger_async_id_symbol)]: 42
    },
    _maxInternalBlockNumber: -1024,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 0,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: LazyInitializationProviderAdapter {
      _providerFactory: [AsyncFunction (anonymous)],
      _emitter: [EventEmitter],
      _initializingPromise: [Promise],
      provider: [BackwardsCompatibilityProviderAdapter]
    },
    _eventLoopCache: { detectNetwork: null },
    _network: { chainId: 17000, name: 'unknown' }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: -1024,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 0,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object]
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
  resolvedAddress: Promise {
    '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
    [Symbol(async_id_symbol)]: 13259,
    [Symbol(trigger_async_id_symbol)]: 13226
  },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'getInflationCalcTime()': [Function (anonymous)],
  'getInflationIntervalRate()': [Function (anonymous)],
  'getInflationIntervalStartTime()': [Function (anonymous)],
  'getInflationIntervalTime()': [Function (anonymous)],
  'getInflationIntervalsPassed()': [Function (anonymous)],
  'getInflationRewardsContractAddress()': [Function (anonymous)],
  'inflationCalculate()': [Function (anonymous)],
  'inflationMintTokens()': [Function (anonymous)],
  'swapTokens(uint256)': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  getInflationCalcTime: [Function (anonymous)],
  getInflationIntervalRate: [Function (anonymous)],
  getInflationIntervalStartTime: [Function (anonymous)],
  getInflationIntervalTime: [Function (anonymous)],
  getInflationIntervalsPassed: [Function (anonymous)],
  getInflationRewardsContractAddress: [Function (anonymous)],
  inflationCalculate: [Function (anonymous)],
  inflationMintTokens: [Function (anonymous)],
  swapTokens: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)]
}
> await rpl.balanceOf(admin.address)
Uncaught TypeError: rpl.balanceOf is not a function
    at REPL71:1:43
> let rpl = await ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
Uncaught SyntaxError: Identifier 'rpl' has already been declared
> rpl = await ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
Contract {
  interface: Interface {
    fragments: [
      [EventFragment],    [EventFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'getInflationCalcTime()': [FunctionFragment],
      'getInflationIntervalRate()': [FunctionFragment],
      'getInflationIntervalStartTime()': [FunctionFragment],
      'getInflationIntervalTime()': [FunctionFragment],
      'getInflationIntervalsPassed()': [FunctionFragment],
      'getInflationRewardsContractAddress()': [FunctionFragment],
      'inflationCalculate()': [FunctionFragment],
      'inflationMintTokens()': [FunctionFragment],
      'swapTokens(uint256)': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 222,
      [Symbol(trigger_async_id_symbol)]: 42
    },
    _maxInternalBlockNumber: -1024,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 0,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: LazyInitializationProviderAdapter {
      _providerFactory: [AsyncFunction (anonymous)],
      _emitter: [EventEmitter],
      _initializingPromise: [Promise],
      provider: [BackwardsCompatibilityProviderAdapter]
    },
    _eventLoopCache: { detectNetwork: null },
    _network: { chainId: 17000, name: 'unknown' }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: -1024,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 0,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object]
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
  resolvedAddress: Promise {
    '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
    [Symbol(async_id_symbol)]: 13693,
    [Symbol(trigger_async_id_symbol)]: 13660
  },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'getInflationCalcTime()': [Function (anonymous)],
  'getInflationIntervalRate()': [Function (anonymous)],
  'getInflationIntervalStartTime()': [Function (anonymous)],
  'getInflationIntervalTime()': [Function (anonymous)],
  'getInflationIntervalsPassed()': [Function (anonymous)],
  'getInflationRewardsContractAddress()': [Function (anonymous)],
  'inflationCalculate()': [Function (anonymous)],
  'inflationMintTokens()': [Function (anonymous)],
  'swapTokens(uint256)': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  getInflationCalcTime: [Function (anonymous)],
  getInflationIntervalRate: [Function (anonymous)],
  getInflationIntervalStartTime: [Function (anonymous)],
  getInflationIntervalTime: [Function (anonymous)],
  getInflationIntervalsPassed: [Function (anonymous)],
  getInflationRewardsContractAddress: [Function (anonymous)],
  inflationCalculate: [Function (anonymous)],
  inflationMintTokens: [Function (anonymous)],
  swapTokens: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)]
}
> await rpl.balanceOf(admin.address)
BigNumber { value: "0" }
> await rpl.balanceOf(deployer.address)
BigNumber { value: "40000000000000000000000" }
> let rplVault = await ethers.getContractAt("RPLVault","0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3")
undefined
> await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address);
Uncaught SyntaxError: 
await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address);
                                                                       ^

Unexpected token ';'
> await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address)
... 
... ;
Uncaught SyntaxError: 
;
^

Unexpected token ';'
> (await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address))
... 
... /
... ;
Uncaught SyntaxError: 
;
^

Unexpected token ';'
> (await rplVault.deposit(ethers.utils.parseUnits("100"), deployer.address))
Uncaught:
Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: ERC20: transfer amount exceeds allowance", method="estimateGas", transaction={"from":"0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374","to":"0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3","data":"0x6e553f650000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: execution reverted: ERC20: transfer amount exceeds allowance\n    at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)","code":3,"_isProviderError":true,"data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002845524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365000000000000000000000000000000000000000000000000"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
    at step (/constellation/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
    at EthersProviderWrapper.<anonymous> (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:642:20)
    at checkError (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:78:20)
    at Logger.throwError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:281:20)
    at Logger.makeError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:269:28) {
  reason: 'execution reverted: ERC20: transfer amount exceeds allowance',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  method: 'estimateGas',
  transaction: {
    from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    to: '0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3',
    data: '0x6e553f650000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374',
    accessList: null
  },
  error: ProviderError: execution reverted: ERC20: transfer amount exceeds allowance
      at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)
}
> await rpl.approve(rplVault.address, ethers.constants.MaxUint256)
{
  hash: '0x4b82cc25c14ae341be1de192dd23a86162ca413fc2f4ca532b1e4143dde16781',
  type: 2,
  accessList: [],
  blockHash: null,
  blockNumber: null,
  transactionIndex: null,
  confirmations: 0,
  from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
  gasPrice: BigNumber { value: "1269544922" },
  maxPriorityFeePerGas: BigNumber { value: "108188031" },
  maxFeePerGas: BigNumber { value: "1269544922" },
  gasLimit: BigNumber { value: "46842" },
  to: '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
  value: BigNumber { value: "0" },
  nonce: 125,
  data: '0x095ea7b30000000000000000000000001c10dda340917a18ac2ed8d3296e0bf8205f4fa3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
  r: '0x518572bf6cfe734dba43fc023ebf2d7ca3722790430f77df16f380b4ab9e0125',
  s: '0x289a0bf7e76219885bc470e29d9bbcc0bc047f6b9da29116d8b8d9d8ae831d90',
  v: 0,
  creates: null,
  chainId: 17000,
  wait: [Function (anonymous)]
}
> 
> 
> await rplVault.deposit(ethers.utils.parseUnits("100"), deployer.address)
{
  hash: '0x92964026283bfb38510faaeb1d2578d39075e70edb5e0c842a63723ee4a9e580',
  type: 2,
  accessList: [],
  blockHash: null,
  blockNumber: null,
  transactionIndex: null,
  confirmations: 0,
  from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
  gasPrice: BigNumber { value: "1418658100" },
  maxPriorityFeePerGas: BigNumber { value: "3440598" },
  maxFeePerGas: BigNumber { value: "1418658100" },
  gasLimit: BigNumber { value: "307495" },
  to: '0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3',
  value: BigNumber { value: "0" },
  nonce: 126,
  data: '0x6e553f650000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374',
  r: '0xce3092097ff6a0a4cf85af2ed0ff64b9706b75abce0d6415a55c50f70b547cf3',
  s: '0x64ee2471daa7f4d070514a6ae17d3b0cdb2a6a2939deedf2d86b561c0d769581',
  v: 0,
  creates: null,
  chainId: 17000,
  wait: [Function (anonymous)]
}
>   getInflationIntervalsPassed: [Function (anonymous)],
  getInflationRewardsContractAddress: [Function (anonymous)],
  inflationCalculate: [Function (anonymous)],
  inflationMintTokens: [Function (anonymous)],
  swapTokens: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)]
}
> await rpl.balanceOf(admin.address)
Uncaught TypeError: rpl.balanceOf is not a function
    at REPL71:1:43
> let rpl = await ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
Uncaught SyntaxError: Identifier 'rpl' has already been declared
> rpl = await ethers.getContractAt("contracts/Interfaces/RocketTokenRPLInterface.sol:RocketTokenRPLInterface", "0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0")
Contract {
  interface: Interface {
    fragments: [
      [EventFragment],    [EventFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment], [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'getInflationCalcTime()': [FunctionFragment],
      'getInflationIntervalRate()': [FunctionFragment],
      'getInflationIntervalStartTime()': [FunctionFragment],
      'getInflationIntervalTime()': [FunctionFragment],
      'getInflationIntervalsPassed()': [FunctionFragment],
      'getInflationRewardsContractAddress()': [FunctionFragment],
      'inflationCalculate()': [FunctionFragment],
      'inflationMintTokens()': [FunctionFragment],
      'swapTokens(uint256)': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 222,
      [Symbol(trigger_async_id_symbol)]: 42
    },
    _maxInternalBlockNumber: -1024,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 0,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: LazyInitializationProviderAdapter {
      _providerFactory: [AsyncFunction (anonymous)],
      _emitter: [EventEmitter],
      _initializingPromise: [Promise],
      provider: [BackwardsCompatibilityProviderAdapter]
    },
    _eventLoopCache: { detectNetwork: null },
    _network: { chainId: 17000, name: 'unknown' }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: -1024,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 0,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object]
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'getInflationCalcTime()': [Function (anonymous)],
    'getInflationIntervalRate()': [Function (anonymous)],
    'getInflationIntervalStartTime()': [Function (anonymous)],
    'getInflationIntervalTime()': [Function (anonymous)],
    'getInflationIntervalsPassed()': [Function (anonymous)],
    'getInflationRewardsContractAddress()': [Function (anonymous)],
    'inflationCalculate()': [Function (anonymous)],
    'inflationMintTokens()': [Function (anonymous)],
    'swapTokens(uint256)': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    getInflationCalcTime: [Function (anonymous)],
    getInflationIntervalRate: [Function (anonymous)],
    getInflationIntervalStartTime: [Function (anonymous)],
    getInflationIntervalTime: [Function (anonymous)],
    getInflationIntervalsPassed: [Function (anonymous)],
    getInflationRewardsContractAddress: [Function (anonymous)],
    inflationCalculate: [Function (anonymous)],
    inflationMintTokens: [Function (anonymous)],
    swapTokens: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
  resolvedAddress: Promise {
    '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
    [Symbol(async_id_symbol)]: 13693,
    [Symbol(trigger_async_id_symbol)]: 13660
  },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'getInflationCalcTime()': [Function (anonymous)],
  'getInflationIntervalRate()': [Function (anonymous)],
  'getInflationIntervalStartTime()': [Function (anonymous)],
  'getInflationIntervalTime()': [Function (anonymous)],
  'getInflationIntervalsPassed()': [Function (anonymous)],
  'getInflationRewardsContractAddress()': [Function (anonymous)],
  'inflationCalculate()': [Function (anonymous)],
  'inflationMintTokens()': [Function (anonymous)],
  'swapTokens(uint256)': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  getInflationCalcTime: [Function (anonymous)],
  getInflationIntervalRate: [Function (anonymous)],
  getInflationIntervalStartTime: [Function (anonymous)],
  getInflationIntervalTime: [Function (anonymous)],
  getInflationIntervalsPassed: [Function (anonymous)],
  getInflationRewardsContractAddress: [Function (anonymous)],
  inflationCalculate: [Function (anonymous)],
  inflationMintTokens: [Function (anonymous)],
  swapTokens: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)]
}
> await rpl.balanceOf(admin.address)
BigNumber { value: "0" }
> await rpl.balanceOf(deployer.address)
BigNumber { value: "40000000000000000000000" }
> let rplVault = await ethers.getContractAt("RPLVault","0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3")
undefined
> await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address);
Uncaught SyntaxError: 
await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address);
                                                                       ^

Unexpected token ';'
> await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address)
... 
... ;
Uncaught SyntaxError: 
;
^

Unexpected token ';'
> (await rplVault.deposit(ethers.utils.parseUnits("100", deployer.address))
... 
... /
... ;
Uncaught SyntaxError: 
;
^

Unexpected token ';'
> (await rplVault.deposit(ethers.utils.parseUnits("100"), deployer.address))
Uncaught:
Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: ERC20: transfer amount exceeds allowance", method="estimateGas", transaction={"from":"0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374","to":"0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3","data":"0x6e553f650000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: execution reverted: ERC20: transfer amount exceeds allowance\n    at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)","code":3,"_isProviderError":true,"data":"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002845524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365000000000000000000000000000000000000000000000000"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
    at step (/constellation/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
    at EthersProviderWrapper.<anonymous> (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:642:20)
    at checkError (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:78:20)
    at Logger.throwError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:281:20)
    at Logger.makeError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:269:28) {
  reason: 'execution reverted: ERC20: transfer amount exceeds allowance',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  method: 'estimateGas',
  transaction: {
    from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    to: '0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3',
    data: '0x6e553f650000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374',
    accessList: null
  },
  error: ProviderError: execution reverted: ERC20: transfer amount exceeds allowance
      at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)
}
> await rpl.approve(rplVault.address, ethers.constants.MaxUint256)
{
  hash: '0x4b82cc25c14ae341be1de192dd23a86162ca413fc2f4ca532b1e4143dde16781',
  type: 2,
  accessList: [],
  blockHash: null,
  blockNumber: null,
  transactionIndex: null,
  confirmations: 0,
  from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
  gasPrice: BigNumber { value: "1269544922" },
  maxPriorityFeePerGas: BigNumber { value: "108188031" },
  maxFeePerGas: BigNumber { value: "1269544922" },
  gasLimit: BigNumber { value: "46842" },
  to: '0x1Cc9cF5586522c6F483E84A19c3C2B0B6d027bF0',
  value: BigNumber { value: "0" },
  nonce: 125,
  data: '0x095ea7b30000000000000000000000001c10dda340917a18ac2ed8d3296e0bf8205f4fa3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
  r: '0x518572bf6cfe734dba43fc023ebf2d7ca3722790430f77df16f380b4ab9e0125',
  s: '0x289a0bf7e76219885bc470e29d9bbcc0bc047f6b9da29116d8b8d9d8ae831d90',
  v: 0,
  creates: null,
  chainId: 17000,
  wait: [Function (anonymous)]
}
> 
> 
> await rplVault.deposit(ethers.utils.parseUnits("100"), deployer.address)
{
  hash: '0x92964026283bfb38510faaeb1d2578d39075e70edb5e0c842a63723ee4a9e580',
  type: 2,
  accessList: [],
  blockHash: null,
  blockNumber: null,
  transactionIndex: null,
  confirmations: 0,
  from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
  gasPrice: BigNumber { value: "1418658100" },
  maxPriorityFeePerGas: BigNumber { value: "3440598" },
  maxFeePerGas: BigNumber { value: "1418658100" },
  gasLimit: BigNumber { value: "307495" },
  to: '0x1c10Dda340917A18AC2ED8D3296e0BF8205F4FA3',
  value: BigNumber { value: "0" },
  nonce: 126,
  data: '0x6e553f650000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374',
  r: '0xce3092097ff6a0a4cf85af2ed0ff64b9706b75abce0d6415a55c50f70b547cf3',
  s: '0x64ee2471daa7f4d070514a6ae17d3b0cdb2a6a2939deedf2d86b561c0d769581',
  v: 0,
  creates: null,
  chainId: 17000,
  wait: [Function (anonymous)]
}
> let wethVault = await ethers.getContractAt("WETHVault", "0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3")
undefined
> let weth = await ethers.getContract("IWETH", wethVault.address)
Uncaught TypeError: ethers.getContract is not a function
    at REPL250:1:52
> weth = await ethers.getContractAt("IWETH", wethVault.address)
Contract {
  interface: Interface {
    fragments: [
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'deposit()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment],
      'withdraw(uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 222,
      [Symbol(trigger_async_id_symbol)]: 42
    },
    _maxInternalBlockNumber: 818715,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1706323778705,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: LazyInitializationProviderAdapter {
      _providerFactory: [AsyncFunction (anonymous)],
      _emitter: [EventEmitter],
      _initializingPromise: [Promise],
      provider: [BackwardsCompatibilityProviderAdapter]
    },
    _eventLoopCache: { detectNetwork: null },
    _network: { chainId: 17000, name: 'unknown' },
    _internalBlockNumber: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 16486,
      [Symbol(trigger_async_id_symbol)]: 16479
    },
    _fastBlockNumber: 818715,
    _fastBlockNumberPromise: Promise {
      818715,
      [Symbol(async_id_symbol)]: 16608,
      [Symbol(trigger_async_id_symbol)]: 16486
    }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 818715,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1706323778705,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 818715,
      _fastBlockNumberPromise: [Promise]
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3',
  resolvedAddress: Promise {
    '0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3',
    [Symbol(async_id_symbol)]: 17670,
    [Symbol(trigger_async_id_symbol)]: 17637
  },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'deposit()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  'withdraw(uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  deposit: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  withdraw: [Function (anonymous)]
}
> await weth.deposit({value ethers.utils.parseEther("1")})
Uncaught SyntaxError: 
await weth.deposit({value ethers.utils.parseEther("1")})
                          ^

Unexpected token 'e'
> await weth.deposit({value: ethers.utils.parseEther("1")})
Uncaught:
Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted", method="estimateGas", transaction={"from":"0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374","to":"0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3","value":{"type":"BigNumber","hex":"0x0de0b6b3a7640000"},"data":"0xd0e30db0","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: execution reverted\n    at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)","code":-32000,"_isProviderError":true}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
    at step (/constellation/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
    at EthersProviderWrapper.<anonymous> (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:642:20)
    at checkError (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:78:20)
    at Logger.throwError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:281:20)
    at Logger.makeError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:269:28) {
  reason: 'execution reverted',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  method: 'estimateGas',
  transaction: {
    from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    to: '0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3',
    value: BigNumber { value: "1000000000000000000" },
    data: '0xd0e30db0',
    accessList: null
  },
  error: ProviderError: execution reverted
      at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)
}
> weth.address
'0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3'
> weth = await ethers.getContractAt("IWETH", await wethVault.asset())
Contract {
  interface: Interface {
    fragments: [
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'allowance(address,address)': [FunctionFragment],
      'approve(address,uint256)': [FunctionFragment],
      'balanceOf(address)': [FunctionFragment],
      'deposit()': [FunctionFragment],
      'totalSupply()': [FunctionFragment],
      'transfer(address,uint256)': [FunctionFragment],
      'transferFrom(address,address,uint256)': [FunctionFragment],
      'withdraw(uint256)': [FunctionFragment]
    },
    errors: {},
    events: {
      'Approval(address,address,uint256)': [EventFragment],
      'Transfer(address,address,uint256)': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: EthersProviderWrapper {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 222,
      [Symbol(trigger_async_id_symbol)]: 42
    },
    _maxInternalBlockNumber: 818749,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 1706324222961,
    connection: { url: 'http://localhost:8545' },
    _nextId: 42,
    _hardhatProvider: LazyInitializationProviderAdapter {
      _providerFactory: [AsyncFunction (anonymous)],
      _emitter: [EventEmitter],
      _initializingPromise: [Promise],
      provider: [BackwardsCompatibilityProviderAdapter]
    },
    _eventLoopCache: { detectNetwork: null },
    _network: { chainId: 17000, name: 'unknown' },
    _internalBlockNumber: Promise {
      [Object],
      [Symbol(async_id_symbol)]: 18090,
      [Symbol(trigger_async_id_symbol)]: 18083
    },
    _fastBlockNumber: 818749,
    _fastBlockNumberPromise: Promise {
      818749,
      [Symbol(async_id_symbol)]: 18212,
      [Symbol(trigger_async_id_symbol)]: 18090
    }
  },
  signer: SignerWithAddress {
    _isSigner: true,
    address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    _signer: JsonRpcSigner {
      _isSigner: true,
      provider: [EthersProviderWrapper],
      _address: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
      _index: null
    },
    provider: EthersProviderWrapper {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 818749,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 1706324222961,
      connection: [Object],
      _nextId: 42,
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 818749,
      _fastBlockNumberPromise: [Promise]
    }
  },
  callStatic: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  estimateGas: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  functions: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  populateTransaction: {
    'allowance(address,address)': [Function (anonymous)],
    'approve(address,uint256)': [Function (anonymous)],
    'balanceOf(address)': [Function (anonymous)],
    'deposit()': [Function (anonymous)],
    'totalSupply()': [Function (anonymous)],
    'transfer(address,uint256)': [Function (anonymous)],
    'transferFrom(address,address,uint256)': [Function (anonymous)],
    'withdraw(uint256)': [Function (anonymous)],
    allowance: [Function (anonymous)],
    approve: [Function (anonymous)],
    balanceOf: [Function (anonymous)],
    deposit: [Function (anonymous)],
    totalSupply: [Function (anonymous)],
    transfer: [Function (anonymous)],
    transferFrom: [Function (anonymous)],
    withdraw: [Function (anonymous)]
  },
  filters: {
    'Approval(address,address,uint256)': [Function (anonymous)],
    'Transfer(address,address,uint256)': [Function (anonymous)],
    Approval: [Function (anonymous)],
    Transfer: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x2C2C6b6d31909270205640d19d5fc20daA0f8c57',
  resolvedAddress: Promise {
    '0x2C2C6b6d31909270205640d19d5fc20daA0f8c57',
    [Symbol(async_id_symbol)]: 18959,
    [Symbol(trigger_async_id_symbol)]: 18926
  },
  'allowance(address,address)': [Function (anonymous)],
  'approve(address,uint256)': [Function (anonymous)],
  'balanceOf(address)': [Function (anonymous)],
  'deposit()': [Function (anonymous)],
  'totalSupply()': [Function (anonymous)],
  'transfer(address,uint256)': [Function (anonymous)],
  'transferFrom(address,address,uint256)': [Function (anonymous)],
  'withdraw(uint256)': [Function (anonymous)],
  allowance: [Function (anonymous)],
  approve: [Function (anonymous)],
  balanceOf: [Function (anonymous)],
  deposit: [Function (anonymous)],
  totalSupply: [Function (anonymous)],
  transfer: [Function (anonymous)],
  transferFrom: [Function (anonymous)],
  withdraw: [Function (anonymous)]
}
> await weth.deposit({value: ethers.utils.parseEther("1")})
{
  hash: '0xfd2b77b39c6f87312c110f25ead8151a6d7413b883d9785d2faf448f2d94f92d',
  type: 2,
  accessList: [],
  blockHash: null,
  blockNumber: null,
  transactionIndex: null,
  confirmations: 0,
  from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
  gasPrice: BigNumber { value: "1139330094" },
  maxPriorityFeePerGas: BigNumber { value: "265332" },
  maxFeePerGas: BigNumber { value: "1139330094" },
  gasLimit: BigNumber { value: "67526" },
  to: '0x2C2C6b6d31909270205640d19d5fc20daA0f8c57',
  value: BigNumber { value: "1000000000000000000" },
  nonce: 127,
  data: '0xd0e30db0',
  r: '0xf3191712d58f3b1a7422a603ff5b0b39c9d55240e8ba7eb0b750973f586acc16',
  s: '0x06d77eb59c38f7dbc7c158cf1a3e9252fbb0410e574614ad70546491e7129b35',
  v: 1,
  creates: null,
  chainId: 17000,
  wait: [Function (anonymous)]
}
> await weth.approve(wethVault.address, ethers.constants.MaxUint256)
{
  hash: '0x1a12cdb881969d1148164469a93c38f120878fad1a6c824f0b495e56d8871258',
  type: 2,
  accessList: [],
  blockHash: null,
  blockNumber: null,
  transactionIndex: null,
  confirmations: 0,
  from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
  gasPrice: BigNumber { value: "1265986484" },
  maxPriorityFeePerGas: BigNumber { value: "265332" },
  maxFeePerGas: BigNumber { value: "1265986484" },
  gasLimit: BigNumber { value: "46573" },
  to: '0x2C2C6b6d31909270205640d19d5fc20daA0f8c57',
  value: BigNumber { value: "0" },
  nonce: 128,
  data: '0x095ea7b3000000000000000000000000f9a442fda87c87273b4676ba0ddef1a2cf20f9f3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
  r: '0x49a85e8372284a42376ee2ee71ece6b7db7e6bc7f66a1f92293a750da62e6ec5',
  s: '0x6b80fc7c328ee2b43fc034e87423503aec1886ee19ea737d405c65f8dd017e5c',
  v: 0,
  creates: null,
  chainId: 17000,
  wait: [Function (anonymous)]
}
> await wethVault.deposit(ethers.utils.parseUnits("1"), deployer.address)
Uncaught HeadersTimeoutError: Headers Timeout Error
    at Timeout.onParserTimeout [as callback] (/constellation/node_modules/undici/lib/client.js:1059:28)
    at Timeout.onTimeout [as _onTimeout] (/constellation/node_modules/undici/lib/timers.js:20:13)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7) {
  code: 'UND_ERR_HEADERS_TIMEOUT'
}
> await wethVault.deposit(ethers.utils.parseUnits("1"), deployer.address)
Uncaught:
Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: insufficient RPL coverage", method="estimateGas", transaction={"from":"0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374","to":"0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3","data":"0x6e553f650000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374","accessList":null}, error={"name":"ProviderError","_stack":"ProviderError: execution reverted: insufficient RPL coverage\n    at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)","code":3,"_isProviderError":true,"data":"0x08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019696e73756666696369656e742052504c20636f76657261676500000000000000"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
    at step (/constellation/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
    at EthersProviderWrapper.<anonymous> (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:642:20)
    at checkError (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:78:20)
    at Logger.throwError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:281:20)
    at Logger.makeError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:269:28) {
  reason: 'execution reverted: insufficient RPL coverage',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  method: 'estimateGas',
  transaction: {
    from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    to: '0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3',
    data: '0x6e553f650000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374',
    accessList: null
  },
  error: ProviderError: execution reverted: insufficient RPL coverage
      at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)
}
> await wethVault.deposit(ethers.utils.parseUnits(".1"), deployer.address)
Uncaught:
Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"name":"ProviderError","_stack":"ProviderError: Reverted 0x08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019696e73756666696369656e742052504c20636f76657261676500000000000000\n    at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)","code":-32015,"_isProviderError":true}, method="estimateGas", transaction={"from":"0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374","to":"0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3","data":"0x6e553f65000000000000000000000000000000000000000000000000016345785d8a00000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374","accessList":null}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
    at step (/constellation/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
    at EthersProviderWrapper.<anonymous> (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:642:20)
    at checkError (/constellation/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts:125:16)
    at Logger.throwError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:281:20)
    at Logger.makeError (/constellation/node_modules/@ethersproject/logger/src.ts/index.ts:269:28) {
  reason: 'cannot estimate gas; transaction may fail or may require manual gas limit',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  error: ProviderError: Reverted 0x08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019696e73756666696369656e742052504c20636f76657261676500000000000000
      at HttpProvider.request (/constellation/node_modules/hardhat/src/internal/core/providers/http.ts:88:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async EthersProviderWrapper.send (/constellation/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20),
  method: 'estimateGas',
  transaction: {
    from: '0x7621940f6068C024Fb3a3eeE2810D5Ad76CEa374',
    to: '0xF9a442FdA87c87273b4676bA0DDEf1a2Cf20F9f3',
    data: '0x6e553f65000000000000000000000000000000000000000000000000016345785d8a00000000000000000000000000007621940f6068c024fb3a3eee2810d5ad76cea374',
    accessList: null
  }
}
> 